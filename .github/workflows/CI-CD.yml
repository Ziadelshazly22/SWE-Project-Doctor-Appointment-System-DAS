name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: docaspythondb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DB_NAME: docaspythondb
      DB_USER: root
      DB_PASSWORD: root
      DB_HOST: 127.0.0.1
      DB_PORT: 3306

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Migrations
      run: |
        python manage.py makemigrations
        python manage.py migrate

    - name: Run Tests
      run: |
        python manage.py test

    - name: Deploy to Heroku
      if: github.ref == 'refs/heads/master'
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh
        echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com
        heroku container:push web --app your-heroku-app-name
        heroku container:release web --app your-heroku-app-name
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
